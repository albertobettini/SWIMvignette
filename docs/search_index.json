[
["scope-of-the-swim-package.html", "3 Scope of the SWIM package 3.1 Stressing a model 3.2 Visual tools", " 3 Scope of the SWIM package 3.1 Stressing a model We define a model to consist of a random vector \\(\\boldsymbol{X} = (X_1, \\ldots, X_n)\\), the model components or input factors, a model function \\(g \\colon \\mathbb{R}^n \\to \\mathbb{R}\\), which gives, when applied to the input factors \\(\\boldsymbol{X}\\), the one-dimensional random output of interest \\(Y = g(\\boldsymbol{X})\\). Starting from a baseline probability, \\(P\\), a probability measure describing the current beliefs regarding (or software implementation of) the model, we are interested in stressed models that fulfil probabilistic constraints and have minimal Kullback-Leibler divergence. Specifically, a stressed probability \\(Q\\) is the solution to \\[\\begin{equation} \\min_{ Q \\in \\mathcal{P}} D_\\text{KL}(Q \\| P), \\quad \\text{s.t. probabilistic constraints of the model under }Q \\text{ hold}, \\tag{3.1} \\end{equation}\\] where the Kullback-Leibler divergence is given by \\(D_\\text{KL}(Q \\| P) = \\int \\frac{dQ}{dP} \\log \\big(\\frac{dQ}{dP} \\big)\\mathrm{d}P\\), for \\(Q\\) absolutely continuous with respect to \\(P\\). The probabilistic constraints in (3.1) are with respect to (one of) the model inputs or the output and the implemented types of stresses are summarised in the subsequent table. R function Stress type Reference stress() wrapper for the stress_ functions stress_user() user defined scenario weights user stress_prob() probabilities of intervals prob Proposition 3.1 stress_mean() means mean Proposition 3.2 stress_mean_sd() means and standard deviations mean sd Proposition 3.2 stress_moment() moments, functions of moments moment Proposition 3.2 stress_VaR() VaR risk measure, a quantile VaR Proposition 3.3 stress_VaR_ES() VaR and ES risk measures VaR ES Proposition 3.3 3.1.1 The stress function and the SWIM object The stress() function is a wapper for the stress_ functions, with stress(type = \"type\", ... ) and stress_type(...) being equivalent. The stress() function solves optimisation (3.1) for constraints specified through type. For a data frame of realisations of the model inputs and corresponding output, provided via the parameter x, the stress() function calculates the scenario weights, such that under the new scenario weights, the constraints are fulfilled. The stress() functions returns a SWIM object containing a list of: x the realistaions of the model input /output new_weights the scenario weights type the “type” of the stress specs the details about the stress The data frame containing the underlying realisations of the model input and corresponding output of a SWIM object (x in the above table), can be extracted using get_data(). Similarly, get_weights() and get_weightsfun() provide the scenario weights, respectively the functions, that when applied to the data generate the scenarion weights. The specification of the applied stress can be obtained using get_specs(). 3.1.2 Stressing disjoint probability intervals Optimisation (3.1) with constraints consisting of disjoint probability intervals, Csiszár (1975), Cambou and Filipović (2017), allow to define stresses by altering regions or events of a model component. The scenario weights for a stress according to Proposition 3.1 is implemented via the function stress_prob(), or equivalently stress(type = \"prob\", ...), and the stressed probability intervals are specified through the lower and upper endpoints of the intervals. Proposition 3.1 (see Proposition 3.1 in Pesenti, Millossovich, and Tsanakas (2019)) Let \\(B_1, \\ldots, B_I\\) be disjoint sets with \\(P(Y \\in B_i) &gt;0\\), for all \\(i = 1, \\ldots, I\\), and \\(\\alpha_1, \\ldots, \\alpha_I &gt; 0\\)1 such that \\(\\alpha_1 + \\ldots + \\alpha_I &lt; 1\\). Then the solution to \\[\\begin{equation} \\min_{Q} D_\\text{KL}(Q \\| P), \\quad \\text{s.t. } Q(Y \\in B_i) = \\alpha_i, ~i = 1, \\ldots, I. \\end{equation}\\] is discribed by the change-of-measure (Radon-Nikodym-density) from \\(P\\) to \\(Q\\) \\[\\begin{equation} w = \\sum_{i = 0}^I \\frac{\\alpha_i}{P(Y \\in B_i)}1_{ \\{Y \\in B_i \\}}, \\end{equation}\\] where \\(\\alpha_0 = 1 - \\alpha_1 + \\ldots + \\alpha_I\\) and \\(B_0 = \\Big( \\bigcup_{i = 1}^I B_i \\Big)^c\\). Note that the scenario weights, \\(w\\), are a function of the stressed model component, \\(Y\\). 3.1.3 Stressing moments The functions stress_mean(), stress_mean_sd() and stress_moment() can be applied to multiple model components and are the only stress functions that have scenrio weights not given in analytical form. Thus, there is no guarantee of existence of the stressed model. Specifically, stress_mean() solves optimisation in Proposition 3.2 via numerical optimisation using the nleqslv package. Proposition 3.2 For \\(i = 1, \\ldots, I\\), let \\(J_i \\subset \\{1, \\ldots, n\\}\\) and \\(f_i \\colon \\mathbb{R}^{J_i} \\to \\mathbb{R}\\) be functions and consider \\[\\begin{equation} \\min_{Q} D_\\text{KL}(Q \\| P), \\quad \\text{s.t. } E^Q(f_i(X_{J_i}) ) = m_i, ~i = 1, \\ldots, I. \\end{equation}\\] where \\(E^Q(\\cdot)\\) denotes the expectation under the stressed model. 3.1.4 Stressing risk measures Recall that the \\(\\text{VaR}\\) at level \\(0 &lt; \\alpha &lt; 1\\) of a random variable \\(Z\\) with distrbution \\(F\\), is defined as the \\(\\alpha-\\)quantile of \\(F\\), that is \\[\\text{VaR}_\\alpha(Z) = F^{-1}(\\alpha).\\] The \\(\\text{ES}\\) at level \\(0 &lt; \\alpha &lt; 1\\) of a random variable \\(Z\\) is given by \\[\\text{ES}_\\alpha(Z) = \\int_0^1 \\text{VaR}_u(Z) \\mathrm{d}u.\\] Proposition 3.3 (see Propositions 3.2 and 3.3 in Pesenti, Millossovich, and Tsanakas (2019)) Let \\(0&lt; \\alpha &lt;1\\) and \\(q, s \\in \\mathbb{R}\\) such that \\(\\text{VaR}_{\\alpha}(Y)&lt;q &lt; s\\), and consider the optimisations \\[\\begin{align} i) \\quad &amp; \\min_{ Q \\ll \\mathcal{P}} D_\\text{KL}(Q \\| P), \\quad \\text{s.t. } \\text{VaR}_{\\alpha }^Q(Y) = q;\\\\ ii) \\quad &amp; \\min_{ Q \\ll \\mathcal{P}} D_\\text{KL}(Q \\| P), \\quad \\text{s.t. } \\text{VaR}_{\\alpha }^Q(Y) = q, \\text{ ES}_{\\alpha }^Q(Y) = s, \\end{align}\\] where \\(\\text{VaR}^Q\\) and \\(\\text{ES}^Q\\) denote the \\(\\text{VaR}\\) and the \\(\\text{ES}\\) under the stressed model. The change-of-measure (Radon-Nikodym-density) of the solution is then described by \\[\\begin{align} i) \\quad &amp; w = \\frac{\\alpha }{ P( Y &lt; q)} 1_{\\{ Y &lt; q\\}} + \\frac{1- \\alpha }{ P(Y \\geq q)} 1_{\\{ Y \\geq q\\}};\\\\ ii) \\quad &amp; w = \\frac{\\alpha }{ P( Y &lt; q)} 1_{\\{ Y &lt; q\\}} + \\frac{1- \\alpha }{E\\left( e^{ \\theta (Y - q) } Y \\geq q \\right)} 1_{\\{ Y \\geq q\\}} e^{\\theta (Y - q)}, \\text{ for a suitable}; \\, \\theta &gt;0.\\\\ \\end{align}\\] 3.2 Visual tools References "]
]
